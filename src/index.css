@import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap");
/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-500: oklch(.637 .237 25.331);
    --color-yellow-500: oklch(.795 .184 86.047);
    --color-green-400: oklch(.792 .209 151.711);
    --color-green-500: oklch(.723 .219 149.579);
    --color-emerald-300: oklch(.845 .143 164.978);
    --color-emerald-400: oklch(.765 .177 163.223);
    --color-emerald-500: oklch(.696 .17 162.48);
    --color-teal-300: oklch(.855 .138 181.071);
    --color-teal-400: oklch(.777 .152 181.912);
    --color-teal-500: oklch(.704 .14 182.503);
    --color-teal-600: oklch(.6 .118 184.704);
    --color-blue-500: oklch(.623 .214 259.815);
    --color-indigo-500: oklch(.585 .233 277.117);
    --color-indigo-600: oklch(.511 .262 276.966);
    --color-indigo-700: oklch(.457 .24 277.023);
    --color-violet-50: oklch(.969 .016 293.756);
    --color-violet-100: oklch(.943 .029 294.588);
    --color-violet-200: oklch(.894 .057 293.283);
    --color-violet-300: oklch(.811 .111 293.571);
    --color-violet-400: oklch(.702 .183 293.541);
    --color-violet-500: oklch(.606 .25 292.717);
    --color-violet-600: oklch(.541 .281 293.009);
    --color-violet-700: oklch(.491 .27 292.581);
    --color-violet-800: oklch(.432 .232 292.759);
    --color-violet-900: oklch(.38 .189 293.745);
    --color-violet-950: oklch(.283 .141 291.089);
    --color-purple-50: oklch(.977 .014 308.299);
    --color-purple-300: oklch(.827 .119 306.383);
    --color-purple-400: oklch(.714 .203 305.504);
    --color-purple-500: oklch(.627 .265 303.9);
    --color-purple-600: oklch(.558 .288 302.321);
    --color-purple-700: oklch(.496 .265 301.924);
    --color-purple-950: oklch(.291 .149 302.717);
    --color-fuchsia-50: oklch(.977 .017 320.058);
    --color-fuchsia-400: oklch(.74 .238 322.16);
    --color-fuchsia-500: oklch(.667 .295 322.15);
    --color-fuchsia-950: oklch(.293 .136 325.661);
    --color-pink-300: oklch(.823 .12 346.018);
    --color-pink-400: oklch(.718 .202 349.761);
    --color-pink-500: oklch(.656 .241 354.308);
    --color-pink-600: oklch(.592 .249 .584);
    --color-rose-300: oklch(.81 .117 11.638);
    --color-rose-400: oklch(.712 .194 13.428);
    --color-slate-600: oklch(.446 .043 257.281);
    --color-slate-700: oklch(.372 .044 257.287);
    --color-slate-800: oklch(.279 .041 260.031);
    --color-slate-900: oklch(.208 .042 265.755);
    --color-gray-100: oklch(.967 .003 264.542);
    --color-gray-300: oklch(.872 .01 258.338);
    --color-gray-400: oklch(.707 .022 261.325);
    --color-gray-500: oklch(.551 .027 264.364);
    --color-gray-600: oklch(.446 .03 256.802);
    --color-gray-700: oklch(.373 .034 259.733);
    --color-gray-900: oklch(.21 .034 264.665);
    --color-white: #fff;
    --spacing: .25rem;
    --container-xs: 20rem;
    --container-md: 28rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-6xl: 3.75rem;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --leading-tight: 1.25;
    --leading-relaxed: 1.625;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --drop-shadow-md: 0 3px 3px #0000001f;
    --drop-shadow-lg: 0 4px 4px #00000026;
    --ease-out: cubic-bezier(0, 0, .2, 1);
    --animate-pulse: pulse 2s cubic-bezier(.4, 0, .6, 1) infinite;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-xl: 24px;
    --blur-2xl: 40px;
    --blur-3xl: 64px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(--font-sans--font-variation-settings);
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
    --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
  }
}

@layer base {
  *, :after, :before, ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  body {
    line-height: inherit;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
    color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }

  ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
    font-family: Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, sans-serif;
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
    background: var(--background);
    font-feature-settings: "kern" 1, "liga" 1, "calt" 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .dark body {
    background: radial-gradient(circle at 20% 50%, #994dff14 0%, transparent 70%), radial-gradient(circle at 80% 20%, #10cda50f 0%, transparent 70%), radial-gradient(circle at 40% 90%, #8b5cf60a 0%, transparent 70%), var(--background);
    background-attachment: fixed;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
    font-size: var(--text-6xl);
    font-weight: var(--font-weight-extrabold);
    letter-spacing: -.025em;
    color: #0000;
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%) text;
    margin-bottom: 1.5rem;
    line-height: 1.05;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) .dark h1 {
    text-shadow: 0 4px 20px #8b5cf64d;
    color: #0000 !important;
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%) text !important;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
    font-size: var(--text-5xl);
    font-weight: var(--font-weight-bold);
    letter-spacing: -.02em;
    color: #0000;
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%) text;
    margin-bottom: 1.5rem;
    line-height: 1.1;
    position: relative;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) .dark h2 {
    color: #0000 !important;
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%) text !important;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2:after {
    content: "";
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%);
    border-radius: .125rem;
    width: 4rem;
    height: .25rem;
    position: absolute;
    bottom: -.5rem;
    left: 50%;
    transform: translateX(-50%);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) .dark h2:after {
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%) !important;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
    font-size: var(--text-3xl);
    font-weight: var(--font-weight-bold);
    letter-spacing: -.015em;
    color: #0000;
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%) text;
    margin-bottom: 1rem;
    line-height: 1.2;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) .dark h3 {
    color: #0000 !important;
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%) text !important;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
    font-size: var(--text-2xl);
    font-weight: var(--font-weight-semibold);
    letter-spacing: -.01em;
    color: var(--foreground);
    margin-bottom: .75rem;
    line-height: 1.3;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h5 {
    font-size: var(--text-xl);
    font-weight: var(--font-weight-semibold);
    color: var(--foreground);
    margin-bottom: .5rem;
    line-height: 1.35;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h6 {
    font-size: var(--text-lg);
    font-weight: var(--font-weight-medium);
    color: var(--foreground);
    margin-bottom: .5rem;
    line-height: 1.4;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
    font-size: var(--text-base);
    font-weight: var(--font-weight-normal);
    color: var(--muted-foreground);
    margin-bottom: 1rem;
    line-height: 1.7;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) .lead {
    font-size: var(--text-xl);
    font-weight: var(--font-weight-normal);
    color: var(--foreground);
    opacity: .8;
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) .dark .lead {
    color: var(--muted-foreground);
    opacity: 1;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) .subtitle {
    font-size: var(--text-lg);
    font-weight: var(--font-weight-medium);
    color: var(--muted-foreground);
    margin-bottom: 1rem;
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) .overline {
    font-size: var(--text-sm);
    font-weight: var(--font-weight-bold);
    text-transform: uppercase;
    letter-spacing: .15em;
    color: var(--brand-primary);
    margin-bottom: .5rem;
    line-height: 1.3;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) .caption {
    font-size: var(--text-sm);
    font-weight: var(--font-weight-normal);
    color: var(--muted-foreground);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) .display {
    font-size: var(--text-6xl);
    font-weight: var(--font-weight-extrabold);
    letter-spacing: -.025em;
    background: linear-gradient(135deg, var(--brand-primary), var(--brand-secondary));
    color: #0000;
    background-clip: text;
    line-height: 1;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label {
    font-size: var(--text-sm);
    font-weight: var(--font-weight-semibold);
    color: var(--foreground);
    line-height: 1.4;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
    font-size: var(--text-base);
    font-weight: var(--font-weight-semibold);
    line-height: 1.4;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) textarea {
    font-size: var(--text-base);
    font-weight: var(--font-weight-normal);
    line-height: 1.5;
  }
}

@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }

  .visible {
    visibility: visible;
  }

  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .-inset-1 {
    inset: calc(var(--spacing) * -1);
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }

  .-top-1 {
    top: calc(var(--spacing) * -1);
  }

  .-top-2 {
    top: calc(var(--spacing) * -2);
  }

  .-top-3 {
    top: calc(var(--spacing) * -3);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-1\/2 {
    top: 50%;
  }

  .top-1\/3 {
    top: 33.3333%;
  }

  .top-1\/4 {
    top: 25%;
  }

  .top-3\/4 {
    top: 75%;
  }

  .top-6 {
    top: calc(var(--spacing) * 6);
  }

  .top-8 {
    top: calc(var(--spacing) * 8);
  }

  .top-20 {
    top: calc(var(--spacing) * 20);
  }

  .-right-1 {
    right: calc(var(--spacing) * -1);
  }

  .-right-2 {
    right: calc(var(--spacing) * -2);
  }

  .-right-3 {
    right: calc(var(--spacing) * -3);
  }

  .-right-6 {
    right: calc(var(--spacing) * -6);
  }

  .-right-8 {
    right: calc(var(--spacing) * -8);
  }

  .-right-20 {
    right: calc(var(--spacing) * -20);
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-1\/3 {
    right: 33.3333%;
  }

  .right-1\/4 {
    right: 25%;
  }

  .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .right-6 {
    right: calc(var(--spacing) * 6);
  }

  .right-8 {
    right: calc(var(--spacing) * 8);
  }

  .-bottom-2 {
    bottom: calc(var(--spacing) * -2);
  }

  .-bottom-3 {
    bottom: calc(var(--spacing) * -3);
  }

  .-bottom-7 {
    bottom: calc(var(--spacing) * -7);
  }

  .-bottom-8 {
    bottom: calc(var(--spacing) * -8);
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .bottom-1\/3 {
    bottom: 33.3333%;
  }

  .bottom-1\/4 {
    bottom: 25%;
  }

  .bottom-6 {
    bottom: calc(var(--spacing) * 6);
  }

  .bottom-8 {
    bottom: calc(var(--spacing) * 8);
  }

  .bottom-12 {
    bottom: calc(var(--spacing) * 12);
  }

  .-left-2 {
    left: calc(var(--spacing) * -2);
  }

  .-left-3 {
    left: calc(var(--spacing) * -3);
  }

  .-left-4 {
    left: calc(var(--spacing) * -4);
  }

  .-left-8 {
    left: calc(var(--spacing) * -8);
  }

  .-left-20 {
    left: calc(var(--spacing) * -20);
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-1\/2 {
    left: 50%;
  }

  .left-1\/4 {
    left: 25%;
  }

  .left-6 {
    left: calc(var(--spacing) * 6);
  }

  .left-8 {
    left: calc(var(--spacing) * 8);
  }

  .-z-10 {
    z-index: calc(10 * -1);
  }

  .z-10 {
    z-index: 10;
  }

  .z-20 {
    z-index: 20;
  }

  .z-30 {
    z-index: 30;
  }

  .z-\[100\] {
    z-index: 100;
  }

  .order-1 {
    order: 1;
  }

  .order-2 {
    order: 2;
  }

  .container {
    width: 100%;
  }

  @media (width >= 40rem) {
    .container {
      max-width: 40rem;
    }
  }

  @media (width >= 48rem) {
    .container {
      max-width: 48rem;
    }
  }

  @media (width >= 64rem) {
    .container {
      max-width: 64rem;
    }
  }

  @media (width >= 80rem) {
    .container {
      max-width: 80rem;
    }
  }

  @media (width >= 96rem) {
    .container {
      max-width: 96rem;
    }
  }

  .m-auto {
    margin: auto;
  }

  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }

  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }

  .mx-8 {
    margin-inline: calc(var(--spacing) * 8);
  }

  .mx-auto {
    margin-inline: auto;
  }

  .my-\[0px\] {
    margin-block: 0;
  }

  .-mt-2 {
    margin-top: calc(var(--spacing) * -2);
  }

  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }

  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }

  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }

  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }

  .mb-0\.5 {
    margin-bottom: calc(var(--spacing) * .5);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }

  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }

  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }

  .ml-auto {
    margin-left: auto;
  }

  .line-clamp-2 {
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .line-clamp-4 {
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .line-clamp-5 {
    -webkit-line-clamp: 5;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .block {
    display: block;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline {
    display: inline;
  }

  .inline-block {
    display: inline-block;
  }

  .inline-flex {
    display: inline-flex;
  }

  .aspect-square {
    aspect-ratio: 1;
  }

  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }

  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }

  .size-full {
    width: 100%;
    height: 100%;
  }

  .h-0\.5 {
    height: calc(var(--spacing) * .5);
  }

  .h-1 {
    height: calc(var(--spacing) * 1);
  }

  .h-1\.5 {
    height: calc(var(--spacing) * 1.5);
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-2\.5 {
    height: calc(var(--spacing) * 2.5);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-3\.5 {
    height: calc(var(--spacing) * 3.5);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-7 {
    height: calc(var(--spacing) * 7);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-9 {
    height: calc(var(--spacing) * 9);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-14 {
    height: calc(var(--spacing) * 14);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-20 {
    height: calc(var(--spacing) * 20);
  }

  .h-32 {
    height: calc(var(--spacing) * 32);
  }

  .h-40 {
    height: calc(var(--spacing) * 40);
  }

  .h-48 {
    height: calc(var(--spacing) * 48);
  }

  .h-56 {
    height: calc(var(--spacing) * 56);
  }

  .h-64 {
    height: calc(var(--spacing) * 64);
  }

  .h-72 {
    height: calc(var(--spacing) * 72);
  }

  .h-80 {
    height: calc(var(--spacing) * 80);
  }

  .h-96 {
    height: calc(var(--spacing) * 96);
  }

  .h-\[2px\] {
    height: 2px;
  }

  .h-\[380px\] {
    height: 380px;
  }

  .h-\[400px\] {
    height: 400px;
  }

  .h-\[500px\] {
    height: 500px;
  }

  .h-\[600px\] {
    height: 600px;
  }

  .h-\[700px\] {
    height: 700px;
  }

  .h-\[800px\] {
    height: 800px;
  }

  .h-\[1000px\] {
    height: 1000px;
  }

  .h-full {
    height: 100%;
  }

  .h-px {
    height: 1px;
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-0 {
    width: calc(var(--spacing) * 0);
  }

  .w-0\.5 {
    width: calc(var(--spacing) * .5);
  }

  .w-1 {
    width: calc(var(--spacing) * 1);
  }

  .w-1\.5 {
    width: calc(var(--spacing) * 1.5);
  }

  .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .w-2\.5 {
    width: calc(var(--spacing) * 2.5);
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-3\.5 {
    width: calc(var(--spacing) * 3.5);
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-5\/12 {
    width: 41.6667%;
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-7 {
    width: calc(var(--spacing) * 7);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-10 {
    width: calc(var(--spacing) * 10);
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-14 {
    width: calc(var(--spacing) * 14);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-20 {
    width: calc(var(--spacing) * 20);
  }

  .w-32 {
    width: calc(var(--spacing) * 32);
  }

  .w-40 {
    width: calc(var(--spacing) * 40);
  }

  .w-48 {
    width: calc(var(--spacing) * 48);
  }

  .w-64 {
    width: calc(var(--spacing) * 64);
  }

  .w-72 {
    width: calc(var(--spacing) * 72);
  }

  .w-80 {
    width: calc(var(--spacing) * 80);
  }

  .w-96 {
    width: calc(var(--spacing) * 96);
  }

  .w-\[400px\] {
    width: 400px;
  }

  .w-\[500px\] {
    width: 500px;
  }

  .w-\[600px\] {
    width: 600px;
  }

  .w-\[700px\] {
    width: 700px;
  }

  .w-\[800px\] {
    width: 800px;
  }

  .w-\[1000px\] {
    width: 1000px;
  }

  .w-auto {
    width: auto;
  }

  .w-fit {
    width: fit-content;
  }

  .w-full {
    width: 100%;
  }

  .w-px {
    width: 1px;
  }

  .max-w-2xl {
    max-width: var(--container-2xl);
  }

  .max-w-3xl {
    max-width: var(--container-3xl);
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-6xl {
    max-width: var(--container-6xl);
  }

  .max-w-7xl {
    max-width: var(--container-7xl);
  }

  .max-w-32 {
    max-width: calc(var(--spacing) * 32);
  }

  .max-w-\[120px\] {
    max-width: 120px;
  }

  .max-w-\[280px\] {
    max-width: 280px;
  }

  .max-w-xl {
    max-width: var(--container-xl);
  }

  .max-w-xs {
    max-width: var(--container-xs);
  }

  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }

  .flex-1 {
    flex: 1;
  }

  .flex-shrink-0, .shrink-0 {
    flex-shrink: 0;
  }

  .flex-grow {
    flex-grow: 1;
  }

  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-0 {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-1\/2 {
    --tw-translate-x: calc(1 / 2 * 100%);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-1\/2 {
    --tw-translate-y: calc(1 / 2 * 100%);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .scale-105 {
    --tw-scale-x: 105%;
    --tw-scale-y: 105%;
    --tw-scale-z: 105%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .scale-125 {
    --tw-scale-x: 125%;
    --tw-scale-y: 125%;
    --tw-scale-z: 125%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .scale-x-\[-1\] {
    --tw-scale-x: -1;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .rotate-12 {
    rotate: 12deg;
  }

  .rotate-45 {
    rotate: 45deg;
  }

  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .animate-pulse {
    animation: var(--animate-pulse);
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .resize {
    resize: both;
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-row {
    flex-direction: row;
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .items-center {
    align-items: center;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-start {
    justify-content: flex-start;
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }

  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-8 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-8 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }

  .rounded-\[40px\] {
    border-radius: 40px;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius);
  }

  .rounded-md {
    border-radius: calc(var(--radius)  - 2px);
  }

  .rounded-xl {
    border-radius: calc(var(--radius)  + 4px);
  }

  .rounded-r {
    border-top-right-radius: .25rem;
    border-bottom-right-radius: .25rem;
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-background {
    border-color: var(--background);
  }

  .border-blue-500 {
    border-color: var(--color-blue-500);
  }

  .border-fuchsia-500\/10 {
    border-color: color-mix(in srgb, oklch(.667 .295 322.15) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-fuchsia-500\/10 {
      border-color: color-mix(in oklab, var(--color-fuchsia-500) 10%, transparent);
    }
  }

  .border-gray-300\/50 {
    border-color: color-mix(in srgb, oklch(.872 .01 258.338) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-gray-300\/50 {
      border-color: color-mix(in oklab, var(--color-gray-300) 50%, transparent);
    }
  }

  .border-green-500 {
    border-color: var(--color-green-500);
  }

  .border-purple-500\/10 {
    border-color: color-mix(in srgb, oklch(.627 .265 303.9) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-500\/10 {
      border-color: color-mix(in oklab, var(--color-purple-500) 10%, transparent);
    }
  }

  .border-transparent {
    border-color: #0000;
  }

  .border-violet-300 {
    border-color: var(--color-violet-300);
  }

  .border-violet-400\/30 {
    border-color: color-mix(in srgb, oklch(.702 .183 293.541) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-violet-400\/30 {
      border-color: color-mix(in oklab, var(--color-violet-400) 30%, transparent);
    }
  }

  .border-violet-400\/40 {
    border-color: color-mix(in srgb, oklch(.702 .183 293.541) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-violet-400\/40 {
      border-color: color-mix(in oklab, var(--color-violet-400) 40%, transparent);
    }
  }

  .border-violet-500\/10 {
    border-color: color-mix(in srgb, oklch(.606 .25 292.717) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-violet-500\/10 {
      border-color: color-mix(in oklab, var(--color-violet-500) 10%, transparent);
    }
  }

  .border-violet-500\/15 {
    border-color: color-mix(in srgb, oklch(.606 .25 292.717) 15%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-violet-500\/15 {
      border-color: color-mix(in oklab, var(--color-violet-500) 15%, transparent);
    }
  }

  .border-violet-500\/20 {
    border-color: color-mix(in srgb, oklch(.606 .25 292.717) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-violet-500\/20 {
      border-color: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
    }
  }

  .border-violet-500\/30 {
    border-color: color-mix(in srgb, oklch(.606 .25 292.717) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-violet-500\/30 {
      border-color: color-mix(in oklab, var(--color-violet-500) 30%, transparent);
    }
  }

  .border-white\/10 {
    border-color: #ffffff1a;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/10 {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }

  .border-white\/20 {
    border-color: #fff3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/20 {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .border-yellow-500 {
    border-color: var(--color-yellow-500);
  }

  .bg-background {
    background-color: var(--background);
  }

  .bg-background\/95 {
    background-color: var(--background);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-background\/95 {
      background-color: color-mix(in oklab, var(--background) 95%, transparent);
    }
  }

  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }

  .bg-destructive {
    background-color: var(--destructive);
  }

  .bg-fuchsia-500\/5 {
    background-color: color-mix(in srgb, oklch(.667 .295 322.15) 5%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-fuchsia-500\/5 {
      background-color: color-mix(in oklab, var(--color-fuchsia-500) 5%, transparent);
    }
  }

  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .bg-green-400 {
    background-color: var(--color-green-400);
  }

  .bg-green-500 {
    background-color: var(--color-green-500);
  }

  .bg-muted {
    background-color: var(--muted);
  }

  .bg-muted-foreground\/30 {
    background-color: var(--muted-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-muted-foreground\/30 {
      background-color: color-mix(in oklab, var(--muted-foreground) 30%, transparent);
    }
  }

  .bg-muted\/50 {
    background-color: var(--muted);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-muted\/50 {
      background-color: color-mix(in oklab, var(--muted) 50%, transparent);
    }
  }

  .bg-primary {
    background-color: var(--primary);
  }

  .bg-purple-500\/3 {
    background-color: color-mix(in srgb, oklch(.627 .265 303.9) 3%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-500\/3 {
      background-color: color-mix(in oklab, var(--color-purple-500) 3%, transparent);
    }
  }

  .bg-secondary {
    background-color: var(--secondary);
  }

  .bg-transparent {
    background-color: #0000;
  }

  .bg-violet-50 {
    background-color: var(--color-violet-50);
  }

  .bg-violet-50\/70 {
    background-color: color-mix(in srgb, oklch(.969 .016 293.756) 70%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-violet-50\/70 {
      background-color: color-mix(in oklab, var(--color-violet-50) 70%, transparent);
    }
  }

  .bg-violet-100 {
    background-color: var(--color-violet-100);
  }

  .bg-violet-300 {
    background-color: var(--color-violet-300);
  }

  .bg-violet-500 {
    background-color: var(--color-violet-500);
  }

  .bg-violet-500\/5 {
    background-color: color-mix(in srgb, oklch(.606 .25 292.717) 5%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-violet-500\/5 {
      background-color: color-mix(in oklab, var(--color-violet-500) 5%, transparent);
    }
  }

  .bg-violet-500\/20 {
    background-color: color-mix(in srgb, oklch(.606 .25 292.717) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-violet-500\/20 {
      background-color: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
    }
  }

  .bg-violet-500\/30 {
    background-color: color-mix(in srgb, oklch(.606 .25 292.717) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-violet-500\/30 {
      background-color: color-mix(in oklab, var(--color-violet-500) 30%, transparent);
    }
  }

  .bg-violet-500\/60 {
    background-color: color-mix(in srgb, oklch(.606 .25 292.717) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-violet-500\/60 {
      background-color: color-mix(in oklab, var(--color-violet-500) 60%, transparent);
    }
  }

  .bg-violet-500\/80 {
    background-color: color-mix(in srgb, oklch(.606 .25 292.717) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-violet-500\/80 {
      background-color: color-mix(in oklab, var(--color-violet-500) 80%, transparent);
    }
  }

  .bg-violet-600\/3 {
    background-color: color-mix(in srgb, oklch(.541 .281 293.009) 3%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-violet-600\/3 {
      background-color: color-mix(in oklab, var(--color-violet-600) 3%, transparent);
    }
  }

  .bg-violet-900 {
    background-color: var(--color-violet-900);
  }

  .bg-white {
    background-color: var(--color-white);
  }

  .bg-white\/70 {
    background-color: #ffffffb3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/70 {
      background-color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }

  .bg-white\/80 {
    background-color: #fffc;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/80 {
      background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }

  .bg-white\/85 {
    background-color: #ffffffd9;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/85 {
      background-color: color-mix(in oklab, var(--color-white) 85%, transparent);
    }
  }

  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }

  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .from-emerald-500\/6 {
    --tw-gradient-from: color-mix(in srgb, oklch(.696 .17 162.48) 6%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-emerald-500\/6 {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-500) 6%, transparent);
    }
  }

  .from-emerald-500\/12 {
    --tw-gradient-from: color-mix(in srgb, oklch(.696 .17 162.48) 12%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-emerald-500\/12 {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-500) 12%, transparent);
    }
  }

  .from-fuchsia-400\/45 {
    --tw-gradient-from: color-mix(in srgb, oklch(.74 .238 322.16) 45%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-fuchsia-400\/45 {
      --tw-gradient-from: color-mix(in oklab, var(--color-fuchsia-400) 45%, transparent);
    }
  }

  .from-fuchsia-500\/15 {
    --tw-gradient-from: color-mix(in srgb, oklch(.667 .295 322.15) 15%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-fuchsia-500\/15 {
      --tw-gradient-from: color-mix(in oklab, var(--color-fuchsia-500) 15%, transparent);
    }
  }

  .from-fuchsia-500\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.667 .295 322.15) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-fuchsia-500\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-fuchsia-500) 50%, transparent);
    }
  }

  .from-indigo-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.585 .233 277.117) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-indigo-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-indigo-500) 20%, transparent);
    }
  }

  .from-indigo-600 {
    --tw-gradient-from: var(--color-indigo-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-300\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(.827 .119 306.383) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-300\/60 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-300) 60%, transparent);
    }
  }

  .from-purple-500 {
    --tw-gradient-from: var(--color-purple-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-600 {
    --tw-gradient-from: var(--color-purple-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-rose-400\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(.712 .194 13.428) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-rose-400\/80 {
      --tw-gradient-from: color-mix(in oklab, var(--color-rose-400) 80%, transparent);
    }
  }

  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-violet-50\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.969 .016 293.756) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-50\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-50) 20%, transparent);
    }
  }

  .from-violet-300\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.811 .111 293.571) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-300\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-300) 50%, transparent);
    }
  }

  .from-violet-300\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(.811 .111 293.571) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-300\/60 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-300) 60%, transparent);
    }
  }

  .from-violet-400 {
    --tw-gradient-from: var(--color-violet-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-violet-400\/40 {
    --tw-gradient-from: color-mix(in srgb, oklch(.702 .183 293.541) 40%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-400\/40 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-400) 40%, transparent);
    }
  }

  .from-violet-400\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(.702 .183 293.541) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-400\/80 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-400) 80%, transparent);
    }
  }

  .from-violet-500 {
    --tw-gradient-from: var(--color-violet-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-violet-500\/5 {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 5%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-500\/5 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 5%, transparent);
    }
  }

  .from-violet-500\/8 {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 8%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-500\/8 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 8%, transparent);
    }
  }

  .from-violet-500\/10 {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-500\/10 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 10%, transparent);
    }
  }

  .from-violet-500\/15 {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 15%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-500\/15 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 15%, transparent);
    }
  }

  .from-violet-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
    }
  }

  .from-violet-500\/25 {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 25%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-500\/25 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 25%, transparent);
    }
  }

  .from-violet-500\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-500\/60 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 60%, transparent);
    }
  }

  .from-violet-500\/90 {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 90%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-500\/90 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 90%, transparent);
    }
  }

  .from-violet-600 {
    --tw-gradient-from: var(--color-violet-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-violet-600\/8 {
    --tw-gradient-from: color-mix(in srgb, oklch(.541 .281 293.009) 8%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-600\/8 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-600) 8%, transparent);
    }
  }

  .from-violet-600\/10 {
    --tw-gradient-from: color-mix(in srgb, oklch(.541 .281 293.009) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-600\/10 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-600) 10%, transparent);
    }
  }

  .from-violet-600\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.541 .281 293.009) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-violet-600\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-600) 20%, transparent);
    }
  }

  .via-fuchsia-50\/10 {
    --tw-gradient-via: color-mix(in srgb, oklch(.977 .017 320.058) 10%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-fuchsia-50\/10 {
      --tw-gradient-via: color-mix(in oklab, var(--color-fuchsia-50) 10%, transparent);
    }
  }

  .via-pink-400\/20 {
    --tw-gradient-via: color-mix(in srgb, oklch(.718 .202 349.761) 20%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-pink-400\/20 {
      --tw-gradient-via: color-mix(in oklab, var(--color-pink-400) 20%, transparent);
    }
  }

  .via-pink-500\/4 {
    --tw-gradient-via: color-mix(in srgb, oklch(.656 .241 354.308) 4%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-pink-500\/4 {
      --tw-gradient-via: color-mix(in oklab, var(--color-pink-500) 4%, transparent);
    }
  }

  .via-purple-500 {
    --tw-gradient-via: var(--color-purple-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-purple-500\/4 {
    --tw-gradient-via: color-mix(in srgb, oklch(.627 .265 303.9) 4%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-500\/4 {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-500) 4%, transparent);
    }
  }

  .via-purple-500\/5 {
    --tw-gradient-via: color-mix(in srgb, oklch(.627 .265 303.9) 5%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-500\/5 {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-500) 5%, transparent);
    }
  }

  .via-purple-500\/8 {
    --tw-gradient-via: color-mix(in srgb, oklch(.627 .265 303.9) 8%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-500\/8 {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-500) 8%, transparent);
    }
  }

  .via-purple-500\/10 {
    --tw-gradient-via: color-mix(in srgb, oklch(.627 .265 303.9) 10%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-500\/10 {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-500) 10%, transparent);
    }
  }

  .via-purple-500\/20 {
    --tw-gradient-via: color-mix(in srgb, oklch(.627 .265 303.9) 20%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-500\/20 {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
    }
  }

  .via-purple-600 {
    --tw-gradient-via: var(--color-purple-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-purple-600\/4 {
    --tw-gradient-via: color-mix(in srgb, oklch(.558 .288 302.321) 4%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-600\/4 {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-600) 4%, transparent);
    }
  }

  .via-purple-600\/20 {
    --tw-gradient-via: color-mix(in srgb, oklch(.558 .288 302.321) 20%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-600\/20 {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-600) 20%, transparent);
    }
  }

  .via-transparent {
    --tw-gradient-via: transparent;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-violet-500\/3 {
    --tw-gradient-via: color-mix(in srgb, oklch(.606 .25 292.717) 3%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-violet-500\/3 {
      --tw-gradient-via: color-mix(in oklab, var(--color-violet-500) 3%, transparent);
    }
  }

  .via-violet-500\/6 {
    --tw-gradient-via: color-mix(in srgb, oklch(.606 .25 292.717) 6%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-violet-500\/6 {
      --tw-gradient-via: color-mix(in oklab, var(--color-violet-500) 6%, transparent);
    }
  }

  .via-violet-500\/8 {
    --tw-gradient-via: color-mix(in srgb, oklch(.606 .25 292.717) 8%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-violet-500\/8 {
      --tw-gradient-via: color-mix(in oklab, var(--color-violet-500) 8%, transparent);
    }
  }

  .via-violet-500\/20 {
    --tw-gradient-via: color-mix(in srgb, oklch(.606 .25 292.717) 20%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-violet-500\/20 {
      --tw-gradient-via: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
    }
  }

  .via-violet-500\/25 {
    --tw-gradient-via: color-mix(in srgb, oklch(.606 .25 292.717) 25%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-violet-500\/25 {
      --tw-gradient-via: color-mix(in oklab, var(--color-violet-500) 25%, transparent);
    }
  }

  .via-violet-500\/30 {
    --tw-gradient-via: color-mix(in srgb, oklch(.606 .25 292.717) 30%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-violet-500\/30 {
      --tw-gradient-via: color-mix(in oklab, var(--color-violet-500) 30%, transparent);
    }
  }

  .via-violet-600 {
    --tw-gradient-via: var(--color-violet-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .to-fuchsia-400 {
    --tw-gradient-to: var(--color-fuchsia-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-fuchsia-500 {
    --tw-gradient-to: var(--color-fuchsia-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-fuchsia-500\/5 {
    --tw-gradient-to: color-mix(in srgb, oklch(.667 .295 322.15) 5%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-fuchsia-500\/5 {
      --tw-gradient-to: color-mix(in oklab, var(--color-fuchsia-500) 5%, transparent);
    }
  }

  .to-fuchsia-500\/10 {
    --tw-gradient-to: color-mix(in srgb, oklch(.667 .295 322.15) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-fuchsia-500\/10 {
      --tw-gradient-to: color-mix(in oklab, var(--color-fuchsia-500) 10%, transparent);
    }
  }

  .to-fuchsia-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.667 .295 322.15) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-fuchsia-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-fuchsia-500) 20%, transparent);
    }
  }

  .to-fuchsia-500\/25 {
    --tw-gradient-to: color-mix(in srgb, oklch(.667 .295 322.15) 25%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-fuchsia-500\/25 {
      --tw-gradient-to: color-mix(in oklab, var(--color-fuchsia-500) 25%, transparent);
    }
  }

  .to-fuchsia-500\/90 {
    --tw-gradient-to: color-mix(in srgb, oklch(.667 .295 322.15) 90%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-fuchsia-500\/90 {
      --tw-gradient-to: color-mix(in oklab, var(--color-fuchsia-500) 90%, transparent);
    }
  }

  .to-pink-300\/60 {
    --tw-gradient-to: color-mix(in srgb, oklch(.823 .12 346.018) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-300\/60 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-300) 60%, transparent);
    }
  }

  .to-pink-400 {
    --tw-gradient-to: var(--color-pink-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-pink-400\/45 {
    --tw-gradient-to: color-mix(in srgb, oklch(.718 .202 349.761) 45%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-400\/45 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-400) 45%, transparent);
    }
  }

  .to-pink-400\/80 {
    --tw-gradient-to: color-mix(in srgb, oklch(.718 .202 349.761) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-400\/80 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-400) 80%, transparent);
    }
  }

  .to-pink-500 {
    --tw-gradient-to: var(--color-pink-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-pink-500\/10 {
    --tw-gradient-to: color-mix(in srgb, oklch(.656 .241 354.308) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-500\/10 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-500) 10%, transparent);
    }
  }

  .to-pink-500\/15 {
    --tw-gradient-to: color-mix(in srgb, oklch(.656 .241 354.308) 15%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-500\/15 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-500) 15%, transparent);
    }
  }

  .to-pink-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.656 .241 354.308) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-500) 20%, transparent);
    }
  }

  .to-pink-500\/50 {
    --tw-gradient-to: color-mix(in srgb, oklch(.656 .241 354.308) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-500\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-500) 50%, transparent);
    }
  }

  .to-pink-500\/80 {
    --tw-gradient-to: color-mix(in srgb, oklch(.656 .241 354.308) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-pink-500\/80 {
      --tw-gradient-to: color-mix(in oklab, var(--color-pink-500) 80%, transparent);
    }
  }

  .to-purple-50\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.977 .014 308.299) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-50\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-50) 20%, transparent);
    }
  }

  .to-purple-300\/60 {
    --tw-gradient-to: color-mix(in srgb, oklch(.827 .119 306.383) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-300\/60 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-300) 60%, transparent);
    }
  }

  .to-purple-400\/40 {
    --tw-gradient-to: color-mix(in srgb, oklch(.714 .203 305.504) 40%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-400\/40 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-400) 40%, transparent);
    }
  }

  .to-purple-500 {
    --tw-gradient-to: var(--color-purple-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-500\/60 {
    --tw-gradient-to: color-mix(in srgb, oklch(.627 .265 303.9) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-500\/60 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-500) 60%, transparent);
    }
  }

  .to-purple-600 {
    --tw-gradient-to: var(--color-purple-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-rose-300\/50 {
    --tw-gradient-to: color-mix(in srgb, oklch(.81 .117 11.638) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-rose-300\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--color-rose-300) 50%, transparent);
    }
  }

  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-violet-500 {
    --tw-gradient-to: var(--color-violet-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-violet-500\/10 {
    --tw-gradient-to: color-mix(in srgb, oklch(.606 .25 292.717) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-violet-500\/10 {
      --tw-gradient-to: color-mix(in oklab, var(--color-violet-500) 10%, transparent);
    }
  }

  .to-violet-600 {
    --tw-gradient-to: var(--color-violet-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .bg-clip-text {
    background-clip: text;
  }

  .fill-current {
    fill: currentColor;
  }

  .fill-gray-400 {
    fill: var(--color-gray-400);
  }

  .object-contain {
    object-fit: contain;
  }

  .object-cover {
    object-fit: cover;
  }

  .object-bottom {
    object-position: bottom;
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-5 {
    padding: calc(var(--spacing) * 5);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .p-\[2px\] {
    padding: 2px;
  }

  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .px-\[8px\] {
    padding-inline: 8px;
  }

  .py-0\.5 {
    padding-block: calc(var(--spacing) * .5);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }

  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }

  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }

  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }

  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }

  .py-\[5px\] {
    padding-block: 5px;
  }

  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }

  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-16 {
    padding-top: calc(var(--spacing) * 16);
  }

  .pt-\[0px\] {
    padding-top: 0;
  }

  .pt-\[20px\] {
    padding-top: 20px;
  }

  .pt-\[40px\] {
    padding-top: 40px;
  }

  .pr-\[0px\] {
    padding-right: 0;
  }

  .pr-\[16px\] {
    padding-right: 16px;
  }

  .pb-\[0px\] {
    padding-bottom: 0;
  }

  .pb-\[20px\] {
    padding-bottom: 20px;
  }

  .pb-\[80px\] {
    padding-bottom: 80px;
  }

  .pl-16 {
    padding-left: calc(var(--spacing) * 16);
  }

  .pl-\[0px\] {
    padding-left: 0;
  }

  .pl-\[8px\] {
    padding-left: 8px;
  }

  .pl-\[16px\] {
    padding-left: 16px;
  }

  .text-center {
    text-align: center;
  }

  .text-left {
    text-align: left;
  }

  .align-middle {
    vertical-align: middle;
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .text-\[9px\] {
    font-size: 9px;
  }

  .text-\[10px\] {
    font-size: 10px;
  }

  .text-\[12px\] {
    font-size: 12px;
  }

  .text-\[20px\] {
    font-size: 20px;
  }

  .text-\[24px\] {
    font-size: 24px;
  }

  .text-\[30px\] {
    font-size: 30px;
  }

  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }

  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-\[rgba\(165\,144\,196\,1\)\] {
    color: #a590c4;
  }

  .text-foreground {
    color: var(--foreground);
  }

  .text-foreground\/80 {
    color: var(--foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-foreground\/80 {
      color: color-mix(in oklab, var(--foreground) 80%, transparent);
    }
  }

  .text-gray-400 {
    color: var(--color-gray-400);
  }

  .text-gray-500 {
    color: var(--color-gray-500);
  }

  .text-gray-600 {
    color: var(--color-gray-600);
  }

  .text-gray-700 {
    color: var(--color-gray-700);
  }

  .text-gray-900 {
    color: var(--color-gray-900);
  }

  .text-muted-foreground {
    color: var(--muted-foreground);
  }

  .text-muted-foreground\/70 {
    color: var(--muted-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-muted-foreground\/70 {
      color: color-mix(in oklab, var(--muted-foreground) 70%, transparent);
    }
  }

  .text-muted-foreground\/80 {
    color: var(--muted-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-muted-foreground\/80 {
      color: color-mix(in oklab, var(--muted-foreground) 80%, transparent);
    }
  }

  .text-primary {
    color: var(--primary);
  }

  .text-primary-foreground {
    color: var(--primary-foreground);
  }

  .text-red-500 {
    color: var(--color-red-500);
  }

  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }

  .text-slate-600 {
    color: var(--color-slate-600);
  }

  .text-slate-700 {
    color: var(--color-slate-700);
  }

  .text-transparent {
    color: #0000;
  }

  .text-violet-500 {
    color: var(--color-violet-500);
  }

  .text-violet-600 {
    color: var(--color-violet-600);
  }

  .text-violet-600\/70 {
    color: color-mix(in srgb, oklch(.541 .281 293.009) 70%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-violet-600\/70 {
      color: color-mix(in oklab, var(--color-violet-600) 70%, transparent);
    }
  }

  .text-violet-600\/80 {
    color: color-mix(in srgb, oklch(.541 .281 293.009) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-violet-600\/80 {
      color: color-mix(in oklab, var(--color-violet-600) 80%, transparent);
    }
  }

  .text-violet-700 {
    color: var(--color-violet-700);
  }

  .text-violet-900 {
    color: var(--color-violet-900);
  }

  .text-white {
    color: var(--color-white);
  }

  .italic {
    font-style: italic;
  }

  .overline {
    text-decoration-line: overline;
  }

  .underline-offset-4 {
    text-underline-offset: 4px;
  }

  .opacity-0 {
    opacity: 0;
  }

  .opacity-8 {
    opacity: .08;
  }

  .opacity-50 {
    opacity: .5;
  }

  .opacity-60 {
    opacity: .6;
  }

  .opacity-90 {
    opacity: .9;
  }

  .opacity-100 {
    opacity: 1;
  }

  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-violet-500\/20 {
    --tw-shadow-color: color-mix(in srgb, oklch(.606 .25 292.717) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-violet-500\/20 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-violet-500) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .shadow-violet-500\/40 {
    --tw-shadow-color: color-mix(in srgb, oklch(.606 .25 292.717) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .shadow-violet-500\/40 {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-violet-500) 40%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .ring-violet-500\/30 {
    --tw-ring-color: color-mix(in srgb, oklch(.606 .25 292.717) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .ring-violet-500\/30 {
      --tw-ring-color: color-mix(in oklab, var(--color-violet-500) 30%, transparent);
    }
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-2xl {
    --tw-blur: blur(var(--blur-2xl));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .drop-shadow-lg {
    --tw-drop-shadow-size: drop-shadow(0 4px 4px var(--tw-drop-shadow-color, #00000026));
    --tw-drop-shadow: drop-shadow(var(--drop-shadow-lg));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .drop-shadow-md {
    --tw-drop-shadow-size: drop-shadow(0 3px 3px var(--tw-drop-shadow-color, #0000001f));
    --tw-drop-shadow: drop-shadow(var(--drop-shadow-md));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[color\,box-shadow\] {
    transition-property: color, box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .duration-200 {
    --tw-duration: .2s;
    transition-duration: .2s;
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .duration-500 {
    --tw-duration: .5s;
    transition-duration: .5s;
  }

  .duration-700 {
    --tw-duration: .7s;
    transition-duration: .7s;
  }

  .duration-1000 {
    --tw-duration: 1s;
    transition-duration: 1s;
  }

  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (hover: hover) {
    .group-hover\:w-full:is(:where(.group):hover *) {
      width: 100%;
    }
  }

  @media (hover: hover) {
    .group-hover\:translate-x-1:is(:where(.group):hover *) {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:translate-x-full:is(:where(.group):hover *) {
      --tw-translate-x: 100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:scale-110:is(:where(.group):hover *) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:border-violet-500\/40:is(:where(.group):hover *) {
      border-color: color-mix(in srgb, oklch(.606 .25 292.717) 40%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:border-violet-500\/40:is(:where(.group):hover *) {
        border-color: color-mix(in oklab, var(--color-violet-500) 40%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-hover\:from-violet-400:is(:where(.group):hover *) {
      --tw-gradient-from: var(--color-violet-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .group-hover\:to-purple-400:is(:where(.group):hover *) {
      --tw-gradient-to: var(--color-purple-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .group-hover\:text-violet-500:is(:where(.group):hover *) {
      color: var(--color-violet-500);
    }
  }

  @media (hover: hover) {
    .group-hover\:text-violet-600:is(:where(.group):hover *) {
      color: var(--color-violet-600);
    }
  }

  @media (hover: hover) {
    .group-hover\:text-white:is(:where(.group):hover *) {
      color: var(--color-white);
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-30:is(:where(.group):hover *) {
      opacity: .3;
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-80:is(:where(.group):hover *) {
      opacity: .8;
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-100:is(:where(.group):hover *) {
      opacity: 1;
    }
  }

  @media (hover: hover) {
    .group-hover\:shadow-xl:is(:where(.group):hover *) {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .group-hover\:blur-md:is(:where(.group):hover *) {
      --tw-blur: blur(var(--blur-md));
      filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }
  }

  @media (hover: hover) {
    .hover\:scale-105:hover {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-110:hover {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:border-gray-900:hover {
      border-color: var(--color-gray-900);
    }
  }

  @media (hover: hover) {
    .hover\:border-violet-400\/40:hover {
      border-color: color-mix(in srgb, oklch(.702 .183 293.541) 40%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-violet-400\/40:hover {
        border-color: color-mix(in oklab, var(--color-violet-400) 40%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-violet-400\/50:hover {
      border-color: color-mix(in srgb, oklch(.702 .183 293.541) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-violet-400\/50:hover {
        border-color: color-mix(in oklab, var(--color-violet-400) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-violet-400\/60:hover {
      border-color: color-mix(in srgb, oklch(.702 .183 293.541) 60%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-violet-400\/60:hover {
        border-color: color-mix(in oklab, var(--color-violet-400) 60%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-violet-500\/20:hover {
      border-color: color-mix(in srgb, oklch(.606 .25 292.717) 20%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-violet-500\/20:hover {
        border-color: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-violet-500\/30:hover {
      border-color: color-mix(in srgb, oklch(.606 .25 292.717) 30%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-violet-500\/30:hover {
        border-color: color-mix(in oklab, var(--color-violet-500) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-violet-500\/40:hover {
      border-color: color-mix(in srgb, oklch(.606 .25 292.717) 40%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-violet-500\/40:hover {
        border-color: color-mix(in oklab, var(--color-violet-500) 40%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-violet-500\/50:hover {
      border-color: color-mix(in srgb, oklch(.606 .25 292.717) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-violet-500\/50:hover {
        border-color: color-mix(in oklab, var(--color-violet-500) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-900:hover {
      background-color: var(--color-gray-900);
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-secondary\/80:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-secondary\/80:hover {
        background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-violet-400:hover {
      background-color: var(--color-violet-400);
    }
  }

  @media (hover: hover) {
    .hover\:bg-violet-500\/10:hover {
      background-color: color-mix(in srgb, oklch(.606 .25 292.717) 10%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-violet-500\/10:hover {
        background-color: color-mix(in oklab, var(--color-violet-500) 10%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-violet-500\/50:hover {
      background-color: color-mix(in srgb, oklch(.606 .25 292.717) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-violet-500\/50:hover {
        background-color: color-mix(in oklab, var(--color-violet-500) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-white\/5:hover {
      background-color: #ffffff0d;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/5:hover {
        background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-white\/80:hover {
      background-color: #fffc;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/80:hover {
        background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:from-indigo-700:hover {
      --tw-gradient-from: var(--color-indigo-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-violet-600:hover {
      --tw-gradient-from: var(--color-violet-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-violet-700:hover {
      --tw-gradient-from: var(--color-violet-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:via-purple-600:hover {
      --tw-gradient-via: var(--color-purple-600);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }

  @media (hover: hover) {
    .hover\:via-purple-700:hover {
      --tw-gradient-via: var(--color-purple-700);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }

  @media (hover: hover) {
    .hover\:via-violet-700:hover {
      --tw-gradient-via: var(--color-violet-700);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }

  @media (hover: hover) {
    .hover\:to-pink-500:hover {
      --tw-gradient-to: var(--color-pink-500);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-pink-600:hover {
      --tw-gradient-to: var(--color-pink-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-purple-700:hover {
      --tw-gradient-to: var(--color-purple-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-foreground:hover {
      color: var(--foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-violet-600:hover {
      color: var(--color-violet-600);
    }
  }

  @media (hover: hover) {
    .hover\:text-white:hover {
      color: var(--color-white);
    }
  }

  @media (hover: hover) {
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .hover\:opacity-80:hover {
      opacity: .8;
    }
  }

  @media (hover: hover) {
    .hover\:shadow-lg:hover {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-xl:hover {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-violet-500\/25:hover {
      --tw-shadow-color: color-mix(in srgb, oklch(.606 .25 292.717) 25%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:shadow-violet-500\/25:hover {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-violet-500) 25%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }

  .focus-visible\:border-ring:focus-visible {
    border-color: var(--ring);
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-destructive\/20:focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-destructive\/20:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .focus-visible\:ring-ring\/50:focus-visible {
    --tw-ring-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .has-\[\>svg\]\:px-2\.5:has( > svg) {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .has-\[\>svg\]\:px-3:has( > svg) {
    padding-inline: calc(var(--spacing) * 3);
  }

  .has-\[\>svg\]\:px-4:has( > svg) {
    padding-inline: calc(var(--spacing) * 4);
  }

  .aria-invalid\:border-destructive[aria-invalid="true"] {
    border-color: var(--destructive);
  }

  .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  @media (width >= 40rem) {
    .sm\:mx-8 {
      margin-inline: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 40rem) {
    .sm\:block {
      display: block;
    }
  }

  @media (width >= 40rem) {
    .sm\:h-18 {
      height: calc(var(--spacing) * 18);
    }
  }

  @media (width >= 40rem) {
    .sm\:h-72 {
      height: calc(var(--spacing) * 72);
    }
  }

  @media (width >= 40rem) {
    .sm\:w-60 {
      width: calc(var(--spacing) * 60);
    }
  }

  @media (width >= 40rem) {
    .sm\:max-w-40 {
      max-width: calc(var(--spacing) * 40);
    }
  }

  @media (width >= 40rem) {
    .sm\:max-w-md {
      max-width: var(--container-md);
    }
  }

  @media (width >= 40rem) {
    .sm\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 40rem) {
    .sm\:gap-3 {
      gap: calc(var(--spacing) * 3);
    }
  }

  @media (width >= 40rem) {
    .sm\:gap-6 {
      gap: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    .sm\:gap-8 {
      gap: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 40rem) {
    .sm\:gap-12 {
      gap: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 40rem) {
    :where(.sm\:space-y-4 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 40rem) {
    .sm\:p-6 {
      padding: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    .sm\:px-2 {
      padding-inline: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 40rem) {
    .sm\:px-3 {
      padding-inline: calc(var(--spacing) * 3);
    }
  }

  @media (width >= 40rem) {
    .sm\:py-16 {
      padding-block: calc(var(--spacing) * 16);
    }
  }

  @media (width >= 40rem) {
    .sm\:py-20 {
      padding-block: calc(var(--spacing) * 20);
    }
  }

  @media (width >= 40rem) {
    .sm\:pr-\[20px\] {
      padding-right: 20px;
    }
  }

  @media (width >= 40rem) {
    .sm\:pl-\[20px\] {
      padding-left: 20px;
    }
  }

  @media (width >= 40rem) {
    .sm\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-\[10px\] {
      font-size: 10px;
    }
  }

  @media (width >= 40rem) {
    .sm\:text-\[12px\] {
      font-size: 12px;
    }
  }

  @media (width >= 48rem) {
    .md\:-right-8 {
      right: calc(var(--spacing) * -8);
    }
  }

  @media (width >= 48rem) {
    .md\:left-1\/2 {
      left: 50%;
    }
  }

  @media (width >= 48rem) {
    .md\:mx-16 {
      margin-inline: calc(var(--spacing) * 16);
    }
  }

  @media (width >= 48rem) {
    .md\:ml-auto {
      margin-left: auto;
    }
  }

  @media (width >= 48rem) {
    .md\:block {
      display: block;
    }
  }

  @media (width >= 48rem) {
    .md\:flex {
      display: flex;
    }
  }

  @media (width >= 48rem) {
    .md\:hidden {
      display: none;
    }
  }

  @media (width >= 48rem) {
    .md\:h-96 {
      height: calc(var(--spacing) * 96);
    }
  }

  @media (width >= 48rem) {
    .md\:w-5\/12 {
      width: 41.6667%;
    }
  }

  @media (width >= 48rem) {
    .md\:w-80 {
      width: calc(var(--spacing) * 80);
    }
  }

  @media (width >= 48rem) {
    .md\:-translate-x-1\/2 {
      --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (width >= 48rem) {
    .md\:transform {
      transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 48rem) {
    .md\:flex-row-reverse {
      flex-direction: row-reverse;
    }
  }

  @media (width >= 48rem) {
    .md\:items-end {
      align-items: flex-end;
    }
  }

  @media (width >= 48rem) {
    .md\:items-start {
      align-items: flex-start;
    }
  }

  @media (width >= 48rem) {
    .md\:gap-16 {
      gap: calc(var(--spacing) * 16);
    }
  }

  @media (width >= 48rem) {
    .md\:p-8 {
      padding: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 48rem) {
    .md\:p-12 {
      padding: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 48rem) {
    .md\:py-6 {
      padding-block: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 48rem) {
    .md\:pr-0 {
      padding-right: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 48rem) {
    .md\:pr-8 {
      padding-right: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 48rem) {
    .md\:pr-\[24px\] {
      padding-right: 24px;
    }
  }

  @media (width >= 48rem) {
    .md\:pl-0 {
      padding-left: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 48rem) {
    .md\:pl-8 {
      padding-left: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 48rem) {
    .md\:pl-\[24px\] {
      padding-left: 24px;
    }
  }

  @media (width >= 48rem) {
    .md\:text-lg {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:order-1 {
      order: 1;
    }
  }

  @media (width >= 64rem) {
    .lg\:order-2 {
      order: 2;
    }
  }

  @media (width >= 64rem) {
    .lg\:col-span-5 {
      grid-column: span 5 / span 5;
    }
  }

  @media (width >= 64rem) {
    .lg\:col-span-7 {
      grid-column: span 7 / span 7;
    }
  }

  @media (width >= 64rem) {
    .lg\:mx-\[-175px\] {
      margin-inline: -175px;
    }
  }

  @media (width >= 64rem) {
    .lg\:mt-6 {
      margin-top: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 64rem) {
    .lg\:mb-2 {
      margin-bottom: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 64rem) {
    .lg\:mb-3 {
      margin-bottom: calc(var(--spacing) * 3);
    }
  }

  @media (width >= 64rem) {
    .lg\:mb-4 {
      margin-bottom: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 64rem) {
    .lg\:mb-6 {
      margin-bottom: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 64rem) {
    .lg\:line-clamp-none {
      -webkit-line-clamp: unset;
      -webkit-box-orient: horizontal;
      display: block;
      overflow: visible;
    }
  }

  @media (width >= 64rem) {
    .lg\:block {
      display: block;
    }
  }

  @media (width >= 64rem) {
    .lg\:flex {
      display: flex;
    }
  }

  @media (width >= 64rem) {
    .lg\:hidden {
      display: none;
    }
  }

  @media (width >= 64rem) {
    .lg\:h-5 {
      height: calc(var(--spacing) * 5);
    }
  }

  @media (width >= 64rem) {
    .lg\:h-12 {
      height: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 64rem) {
    .lg\:h-\[420px\] {
      height: 420px;
    }
  }

  @media (width >= 64rem) {
    .lg\:min-h-screen {
      min-height: 100vh;
    }
  }

  @media (width >= 64rem) {
    .lg\:w-5 {
      width: calc(var(--spacing) * 5);
    }
  }

  @media (width >= 64rem) {
    .lg\:w-12 {
      width: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 64rem) {
    .lg\:w-96 {
      width: calc(var(--spacing) * 96);
    }
  }

  @media (width >= 64rem) {
    .lg\:max-w-2xl {
      max-width: var(--container-2xl);
    }
  }

  @media (width >= 64rem) {
    .lg\:max-w-xs {
      max-width: var(--container-xs);
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-12 {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:justify-end {
      justify-content: flex-end;
    }
  }

  @media (width >= 64rem) {
    .lg\:gap-4 {
      gap: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 64rem) {
    .lg\:gap-24 {
      gap: calc(var(--spacing) * 24);
    }
  }

  @media (width >= 64rem) {
    :where(.lg\:space-y-4 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 64rem) {
    :where(.lg\:space-y-6 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 64rem) {
    .lg\:p-8 {
      padding: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 64rem) {
    .lg\:px-0 {
      padding-inline: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 64rem) {
    .lg\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 64rem) {
    .lg\:px-\[14px\] {
      padding-inline: 14px;
    }
  }

  @media (width >= 64rem) {
    .lg\:py-0 {
      padding-block: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 64rem) {
    .lg\:py-20 {
      padding-block: calc(var(--spacing) * 20);
    }
  }

  @media (width >= 64rem) {
    .lg\:py-24 {
      padding-block: calc(var(--spacing) * 24);
    }
  }

  @media (width >= 64rem) {
    .lg\:py-\[6px\] {
      padding-block: 6px;
    }
  }

  @media (width >= 64rem) {
    .lg\:pt-4 {
      padding-top: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 64rem) {
    .lg\:pt-6 {
      padding-top: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 64rem) {
    .lg\:pt-\[8px\] {
      padding-top: 8px;
    }
  }

  @media (width >= 64rem) {
    .lg\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-3xl {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-xs {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-\[14px\] {
      font-size: 14px;
    }
  }

  @media (width >= 64rem) {
    .lg\:text-\[16px\] {
      font-size: 16px;
    }
  }

  @media (width >= 80rem) {
    .xl\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 80rem) {
    .xl\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 80rem) {
    .xl\:text-4xl {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }

  .dark\:border-input:is(.dark *) {
    border-color: var(--input);
  }

  .dark\:border-violet-300\/30:is(.dark *) {
    border-color: color-mix(in srgb, oklch(.811 .111 293.571) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-violet-300\/30:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-violet-300) 30%, transparent);
    }
  }

  .dark\:border-violet-400\/30:is(.dark *) {
    border-color: color-mix(in srgb, oklch(.702 .183 293.541) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-violet-400\/30:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-violet-400) 30%, transparent);
    }
  }

  .dark\:border-violet-400\/40:is(.dark *) {
    border-color: color-mix(in srgb, oklch(.702 .183 293.541) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-violet-400\/40:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-violet-400) 40%, transparent);
    }
  }

  .dark\:border-violet-500\/10:is(.dark *) {
    border-color: color-mix(in srgb, oklch(.606 .25 292.717) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-violet-500\/10:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-violet-500) 10%, transparent);
    }
  }

  .dark\:border-violet-500\/15:is(.dark *) {
    border-color: color-mix(in srgb, oklch(.606 .25 292.717) 15%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-violet-500\/15:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-violet-500) 15%, transparent);
    }
  }

  .dark\:border-violet-500\/20:is(.dark *) {
    border-color: color-mix(in srgb, oklch(.606 .25 292.717) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-violet-500\/20:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
    }
  }

  .dark\:border-violet-500\/30:is(.dark *) {
    border-color: color-mix(in srgb, oklch(.606 .25 292.717) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-violet-500\/30:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-violet-500) 30%, transparent);
    }
  }

  .dark\:bg-destructive\/60:is(.dark *) {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-destructive\/60:is(.dark *) {
      background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
    }
  }

  .dark\:bg-gray-900:is(.dark *) {
    background-color: var(--color-gray-900);
  }

  .dark\:bg-input\/30:is(.dark *) {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-input\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  .dark\:bg-slate-800\/80:is(.dark *) {
    background-color: color-mix(in srgb, oklch(.279 .041 260.031) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-slate-800\/80:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-slate-800) 80%, transparent);
    }
  }

  .dark\:bg-slate-900\/40:is(.dark *) {
    background-color: color-mix(in srgb, oklch(.208 .042 265.755) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-slate-900\/40:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-slate-900) 40%, transparent);
    }
  }

  .dark\:bg-slate-900\/85:is(.dark *) {
    background-color: color-mix(in srgb, oklch(.208 .042 265.755) 85%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-slate-900\/85:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-slate-900) 85%, transparent);
    }
  }

  .dark\:bg-violet-800:is(.dark *) {
    background-color: var(--color-violet-800);
  }

  .dark\:bg-violet-900\/30:is(.dark *) {
    background-color: color-mix(in srgb, oklch(.38 .189 293.745) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-violet-900\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-violet-900) 30%, transparent);
    }
  }

  .dark\:bg-violet-900\/40:is(.dark *) {
    background-color: color-mix(in srgb, oklch(.38 .189 293.745) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-violet-900\/40:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-violet-900) 40%, transparent);
    }
  }

  .dark\:from-emerald-400\/80:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.765 .177 163.223) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-emerald-400\/80:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-400) 80%, transparent);
    }
  }

  .dark\:from-purple-300\/60:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.827 .119 306.383) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-purple-300\/60:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-300) 60%, transparent);
    }
  }

  .dark\:from-violet-300\/45:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.811 .111 293.571) 45%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-300\/45:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-300) 45%, transparent);
    }
  }

  .dark\:from-violet-300\/50:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.811 .111 293.571) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-300\/50:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-300) 50%, transparent);
    }
  }

  .dark\:from-violet-300\/60:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.811 .111 293.571) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-300\/60:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-300) 60%, transparent);
    }
  }

  .dark\:from-violet-400:is(.dark *) {
    --tw-gradient-from: var(--color-violet-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-violet-400\/40:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.702 .183 293.541) 40%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-400\/40:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-400) 40%, transparent);
    }
  }

  .dark\:from-violet-400\/50:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.702 .183 293.541) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-400\/50:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-400) 50%, transparent);
    }
  }

  .dark\:from-violet-400\/80:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.702 .183 293.541) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-400\/80:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-400) 80%, transparent);
    }
  }

  .dark\:from-violet-500:is(.dark *) {
    --tw-gradient-from: var(--color-violet-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-violet-500\/10:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-500\/10:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 10%, transparent);
    }
  }

  .dark\:from-violet-500\/20:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-500\/20:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
    }
  }

  .dark\:from-violet-500\/30:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-500\/30:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 30%, transparent);
    }
  }

  .dark\:from-violet-500\/60:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-500\/60:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 60%, transparent);
    }
  }

  .dark\:from-violet-500\/80:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-500\/80:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 80%, transparent);
    }
  }

  .dark\:from-violet-600:is(.dark *) {
    --tw-gradient-from: var(--color-violet-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-violet-600\/25:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.541 .281 293.009) 25%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-600\/25:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-600) 25%, transparent);
    }
  }

  .dark\:from-violet-950\/30:is(.dark *) {
    --tw-gradient-from: color-mix(in srgb, oklch(.283 .141 291.089) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-violet-950\/30:is(.dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-violet-950) 30%, transparent);
    }
  }

  .dark\:via-fuchsia-950\/20:is(.dark *) {
    --tw-gradient-via: color-mix(in srgb, oklch(.293 .136 325.661) 20%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:via-fuchsia-950\/20:is(.dark *) {
      --tw-gradient-via: color-mix(in oklab, var(--color-fuchsia-950) 20%, transparent);
    }
  }

  .dark\:via-purple-500:is(.dark *) {
    --tw-gradient-via: var(--color-purple-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .dark\:via-purple-500\/20:is(.dark *) {
    --tw-gradient-via: color-mix(in srgb, oklch(.627 .265 303.9) 20%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:via-purple-500\/20:is(.dark *) {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
    }
  }

  .dark\:via-purple-600:is(.dark *) {
    --tw-gradient-via: var(--color-purple-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .dark\:via-purple-600\/25:is(.dark *) {
    --tw-gradient-via: color-mix(in srgb, oklch(.558 .288 302.321) 25%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:via-purple-600\/25:is(.dark *) {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-600) 25%, transparent);
    }
  }

  .dark\:via-teal-500\/6:is(.dark *) {
    --tw-gradient-via: color-mix(in srgb, oklch(.704 .14 182.503) 6%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:via-teal-500\/6:is(.dark *) {
      --tw-gradient-via: color-mix(in oklab, var(--color-teal-500) 6%, transparent);
    }
  }

  .dark\:to-emerald-300\/50:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.845 .143 164.978) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-emerald-300\/50:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-emerald-300) 50%, transparent);
    }
  }

  .dark\:to-emerald-500:is(.dark *) {
    --tw-gradient-to: var(--color-emerald-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-emerald-500\/80:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.696 .17 162.48) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-emerald-500\/80:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-emerald-500) 80%, transparent);
    }
  }

  .dark\:to-purple-950\/30:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.291 .149 302.717) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-purple-950\/30:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-950) 30%, transparent);
    }
  }

  .dark\:to-teal-300\/45:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.855 .138 181.071) 45%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-teal-300\/45:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-300) 45%, transparent);
    }
  }

  .dark\:to-teal-300\/60:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.855 .138 181.071) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-teal-300\/60:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-300) 60%, transparent);
    }
  }

  .dark\:to-teal-400:is(.dark *) {
    --tw-gradient-to: var(--color-teal-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-teal-400\/40:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.777 .152 181.912) 40%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-teal-400\/40:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-400) 40%, transparent);
    }
  }

  .dark\:to-teal-400\/50:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.777 .152 181.912) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-teal-400\/50:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-400) 50%, transparent);
    }
  }

  .dark\:to-teal-500:is(.dark *) {
    --tw-gradient-to: var(--color-teal-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-teal-500\/10:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.704 .14 182.503) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-teal-500\/10:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-500) 10%, transparent);
    }
  }

  .dark\:to-teal-500\/20:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.704 .14 182.503) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-teal-500\/20:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-500) 20%, transparent);
    }
  }

  .dark\:to-teal-500\/25:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.704 .14 182.503) 25%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-teal-500\/25:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-500) 25%, transparent);
    }
  }

  .dark\:to-teal-500\/30:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.704 .14 182.503) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-teal-500\/30:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-500) 30%, transparent);
    }
  }

  .dark\:to-teal-500\/60:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.704 .14 182.503) 60%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-teal-500\/60:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-500) 60%, transparent);
    }
  }

  .dark\:to-teal-500\/80:is(.dark *) {
    --tw-gradient-to: color-mix(in srgb, oklch(.704 .14 182.503) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-teal-500\/80:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-500) 80%, transparent);
    }
  }

  .dark\:to-transparent:is(.dark *) {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:fill-white:is(.dark *) {
    fill: var(--color-white);
  }

  .dark\:text-gray-300:is(.dark *) {
    color: var(--color-gray-300);
  }

  .dark\:text-muted-foreground:is(.dark *) {
    color: var(--muted-foreground);
  }

  .dark\:text-muted-foreground\/70:is(.dark *) {
    color: var(--muted-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-muted-foreground\/70:is(.dark *) {
      color: color-mix(in oklab, var(--muted-foreground) 70%, transparent);
    }
  }

  .dark\:text-violet-100:is(.dark *) {
    color: var(--color-violet-100);
  }

  .dark\:text-violet-100\/60:is(.dark *) {
    color: color-mix(in srgb, oklch(.943 .029 294.588) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-violet-100\/60:is(.dark *) {
      color: color-mix(in oklab, var(--color-violet-100) 60%, transparent);
    }
  }

  .dark\:text-violet-100\/80:is(.dark *) {
    color: color-mix(in srgb, oklch(.943 .029 294.588) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-violet-100\/80:is(.dark *) {
      color: color-mix(in oklab, var(--color-violet-100) 80%, transparent);
    }
  }

  .dark\:text-violet-100\/90:is(.dark *) {
    color: color-mix(in srgb, oklch(.943 .029 294.588) 90%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-violet-100\/90:is(.dark *) {
      color: color-mix(in oklab, var(--color-violet-100) 90%, transparent);
    }
  }

  .dark\:text-violet-200:is(.dark *) {
    color: var(--color-violet-200);
  }

  .dark\:text-violet-300:is(.dark *) {
    color: var(--color-violet-300);
  }

  .dark\:text-violet-400:is(.dark *) {
    color: var(--color-violet-400);
  }

  .dark\:text-white:is(.dark *) {
    color: var(--color-white);
  }

  .dark\:opacity-0:is(.dark *) {
    opacity: 0;
  }

  .dark\:opacity-100:is(.dark *) {
    opacity: 1;
  }

  @media (hover: hover) {
    .dark\:group-hover\:text-violet-200:is(.dark *):is(:where(.group):hover *) {
      color: var(--color-violet-200);
    }
  }

  @media (hover: hover) {
    .dark\:group-hover\:text-violet-400:is(.dark *):is(:where(.group):hover *) {
      color: var(--color-violet-400);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:border-violet-400\/50:is(.dark *):hover {
      border-color: color-mix(in srgb, oklch(.702 .183 293.541) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:border-violet-400\/50:is(.dark *):hover {
        border-color: color-mix(in oklab, var(--color-violet-400) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:border-violet-500\/25:is(.dark *):hover {
      border-color: color-mix(in srgb, oklch(.606 .25 292.717) 25%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:border-violet-500\/25:is(.dark *):hover {
        border-color: color-mix(in oklab, var(--color-violet-500) 25%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-accent\/50:is(.dark *):hover {
      background-color: var(--accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-accent\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-input\/50:is(.dark *):hover {
      background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-input\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--input) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-slate-900\/60:is(.dark *):hover {
      background-color: color-mix(in srgb, oklch(.208 .042 265.755) 60%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-slate-900\/60:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--color-slate-900) 60%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:from-violet-600:is(.dark *):hover {
      --tw-gradient-from: var(--color-violet-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:from-violet-700:is(.dark *):hover {
      --tw-gradient-from: var(--color-violet-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:via-purple-600:is(.dark *):hover {
      --tw-gradient-via: var(--color-purple-600);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:via-purple-700:is(.dark *):hover {
      --tw-gradient-via: var(--color-purple-700);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:to-teal-500:is(.dark *):hover {
      --tw-gradient-to: var(--color-teal-500);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:to-teal-600:is(.dark *):hover {
      --tw-gradient-to: var(--color-teal-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-violet-200:is(.dark *):hover {
      color: var(--color-violet-200);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-white:is(.dark *):hover {
      color: var(--color-white);
    }
  }

  .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&\>svg\]\:pointer-events-none > svg {
    pointer-events: none;
  }

  .\[\&\>svg\]\:size-3 > svg {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-secondary\/90:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-secondary\/90:hover {
        background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }

  .section-title {
    font-size: var(--text-5xl);
    font-weight: var(--font-weight-extrabold);
    letter-spacing: -.02em;
    text-align: center;
    color: #0000;
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%) text;
    margin-bottom: 2rem;
    line-height: 1.1;
    position: relative;
  }

  .dark .section-title {
    color: #0000 !important;
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%) text !important;
  }

  .section-title:after {
    content: "";
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%);
    border-radius: .125rem;
    width: 5rem;
    height: .25rem;
    position: absolute;
    bottom: -1rem;
    left: 50%;
    transform: translateX(-50%);
  }

  .dark .section-title:after {
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%) !important;
  }

  .card-title {
    font-size: var(--text-2xl);
    font-weight: var(--font-weight-bold);
    letter-spacing: -.01em;
    color: #0000;
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%) text;
    margin-bottom: .75rem;
    line-height: 1.3;
  }

  .dark .card-title {
    color: #0000 !important;
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%) text !important;
  }

  .stat-number {
    font-size: var(--text-4xl);
    font-weight: var(--font-weight-extrabold);
    color: #0000;
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%) text;
    line-height: 1;
  }

  .dark .stat-number {
    color: #0000 !important;
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%) text !important;
  }

  .badge-text {
    font-size: var(--text-sm);
    font-weight: var(--font-weight-semibold);
    text-transform: uppercase;
    letter-spacing: .1em;
  }

  .gradient-text {
    font-weight: var(--font-weight-bold);
    color: #0000;
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%) text;
  }

  .dark .gradient-text {
    color: #0000 !important;
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%) text !important;
  }

  .emphasis-text {
    font-weight: var(--font-weight-bold);
    color: var(--foreground);
  }

  .bg-gradient-radial {
    background: radial-gradient(circle, var(--tw-gradient-stops));
  }

  .text-readable {
    color: #1a1a1a;
  }

  .dark .text-readable {
    color: #f3f0ff;
  }

  .text-readable-muted {
    color: #4b5563;
  }

  .dark .text-readable-muted {
    color: #a78bfa;
  }

  .card-hover-lift {
    transition: all .3s;
  }

  .card-hover-lift:hover {
    transform: translateY(-4px)scale(1.01);
  }

  .border-elegant {
    border: 1px solid #8b5cf614;
  }

  .dark .border-elegant {
    border-color: #8b5cf61f;
  }

  .border-elegant-hover {
    border: 1px solid #ffffff0f;
    transition: border-color .3s;
  }

  .border-elegant-hover:hover {
    border-color: #8b5cf626;
  }

  .dark .border-elegant-hover {
    border-color: #8b5cf60f;
  }

  .dark .border-elegant-hover:hover {
    border-color: #8b5cf62e;
  }

  .accent-gradient {
    position: relative;
  }

  .accent-gradient:after {
    content: "";
    opacity: 0;
    border-radius: inherit;
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%);
    height: 2px;
    transition: opacity .3s;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
  }

  .accent-gradient:hover:after {
    opacity: .6;
  }

  .dark .accent-gradient:after {
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%);
  }

  .star-gradient {
    stroke: url("#star-gradient-light");
  }

  .dark .star-gradient {
    stroke: url("#star-gradient-dark") !important;
  }

  .footer-gradient-hover:hover {
    background: linear-gradient(135deg, #994dff26 0%, #f4339e26 100%) !important;
    border-color: #994dff66 !important;
  }

  .dark .footer-gradient-hover:hover {
    background: linear-gradient(135deg, #994dff33 0%, #10cda533 100%) !important;
    border-color: #994dff66 !important;
  }

  .project-card-button {
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%) !important;
  }

  .dark .project-card-button {
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%) !important;
  }

  .carousel-container {
    --cards-visible: 3;
    --card-width: calc(100% / var(--cards-visible));
    --slide-width: calc(100% / var(--cards-visible));
  }

  @media (width <= 768px) {
    .carousel-container {
      --cards-visible: 1;
      --card-width: 100%;
      --slide-width: 100%;
    }
  }
}


:root {
  --font-size: 16px;
  --brand-primary: #8b5cf6;
  --brand-secondary: #a855f7;
  --brand-accent: #c084fc;
  --brand-success: #10b981;
  --brand-teal: #14b8a6;
  --gradient-light: linear-gradient(135deg, #994dff 0%, #f4339e 100%);
  --gradient-dark: linear-gradient(135deg, #994dff 0%, #10cda5 100%);
  --text-primary-light: #374151;
  --text-secondary-light: #4b5563;
  --text-muted-light: #6b7280;
  --text-primary-dark: #f8f7ff;
  --text-secondary-dark: #e2e1ea;
  --text-muted-dark: #b8b7c4;
  --background: #fafafa;
  --foreground: var(--text-primary-light);
  --card: #ffffffe6;
  --card-foreground: var(--text-primary-light);
  --popover: #fffffff2;
  --popover-foreground: var(--text-primary-light);
  --primary: var(--brand-primary);
  --primary-foreground: var(--text-primary-dark);
  --secondary: #f8f8fb;
  --secondary-foreground: var(--text-secondary-light);
  --muted: #f5f5f8;
  --muted-foreground: var(--text-muted-light);
  --accent: var(--brand-accent);
  --accent-foreground: var(--text-primary-light);
  --destructive: #ef4444;
  --destructive-foreground: var(--text-primary-dark);
  --border: #994dff26;
  --input: #ffffffd9;
  --input-background: #ffffffe6;
  --switch-background: #ededf0;
  --ring: var(--brand-primary);
  --text-xs: .75rem;
  --text-sm: .875rem;
  --text-base: 1rem;
  --text-lg: 1.125rem;
  --text-xl: 1.25rem;
  --text-2xl: 1.5rem;
  --text-3xl: 1.875rem;
  --text-4xl: 2.25rem;
  --text-5xl: 3rem;
  --text-6xl: 3.75rem;
  --font-weight-light: 300;
  --font-weight-normal: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;
  --font-weight-extrabold: 800;
  --radius: .75rem;
  --radius-sm: .375rem;
  --radius-md: .5rem;
  --radius-lg: .75rem;
  --radius-xl: 1rem;
  --radius-2xl: 1.25rem;
  --glass-bg: #fffc;
  --glass-border: var(--gradient-light);
  --glass-shadow: 0 8px 32px 0 #994dff14;
  --sidebar: var(--background);
  --sidebar-foreground: var(--foreground);
  --sidebar-primary: var(--primary);
  --sidebar-primary-foreground: var(--primary-foreground);
  --sidebar-accent: var(--accent);
  --sidebar-accent-foreground: var(--accent-foreground);
  --sidebar-border: var(--border);
  --sidebar-ring: var(--ring);
}

.dark {
  --background: #0f0b1f;
  --foreground: var(--text-primary-dark);
  --card: #8b5cf60f;
  --card-foreground: var(--text-primary-dark);
  --popover: #1f182feb;
  --popover-foreground: var(--text-primary-dark);
  --primary: var(--brand-primary);
  --primary-foreground: var(--text-primary-dark);
  --secondary: #8b5cf614;
  --secondary-foreground: var(--text-secondary-dark);
  --muted: #8b5cf60a;
  --muted-foreground: var(--text-muted-dark);
  --accent: var(--brand-accent);
  --accent-foreground: #1f1832;
  --destructive: #f87171;
  --destructive-foreground: var(--text-primary-dark);
  --border: #994dff1f;
  --input: #8b5cf614;
  --ring: var(--brand-secondary);
  --glass-bg: #0f172a26;
  --glass-border: var(--gradient-dark);
  --glass-shadow: 0 8px 32px 0 #00000040;
  --sidebar: var(--background);
  --sidebar-foreground: var(--foreground);
  --sidebar-primary: var(--primary);
  --sidebar-primary-foreground: var(--primary-foreground);
  --sidebar-accent: var(--accent);
  --sidebar-accent-foreground: var(--accent-foreground);
  --sidebar-border: var(--border);
  --sidebar-ring: var(--ring);
}

@layer components {
  .glass {
    background: var(--glass-bg);
    -webkit-backdrop-filter: blur(20px);
    box-shadow: var(--glass-shadow);
    border: 1px solid #ffffff14;
    transition: all .3s;
    position: relative;
  }

  .glass:hover {
    background: #ffffffd9;
    border-color: #8b5cf626;
    transform: translateY(-2px);
    box-shadow: 0 12px 40px #994dff1f;
  }

  .glass-strong {
    -webkit-backdrop-filter: blur(25px);
    background: #ffffffeb;
    border: 1px solid #ffffff1f;
    transition: all .3s;
    position: relative;
    box-shadow: 0 8px 32px #994dff14;
  }

  .glass-strong:hover {
    background: #fffffff5;
    border-color: #8b5cf61f;
    transform: translateY(-4px);
    box-shadow: 0 16px 48px #994dff26;
  }

  .glass-subtle {
    -webkit-backdrop-filter: blur(15px);
    background: #ffffffb3;
    border: 1px solid #ffffff0f;
    transition: all .3s;
    position: relative;
    box-shadow: 0 4px 24px #994dff0a;
  }

  .glass-subtle:hover {
    background: #fffc;
    border-color: #8b5cf614;
    transform: translateY(-1px);
    box-shadow: 0 8px 32px #994dff14;
  }

  .glass-gradient {
    background: var(--glass-bg);
    -webkit-backdrop-filter: blur(20px);
    box-shadow: var(--glass-shadow);
    border: 1px solid #ffffff14;
    transition: all .4s;
    position: relative;
    overflow: hidden;
  }

  .glass-gradient:before {
    content: "";
    opacity: 0;
    pointer-events: none;
    border-radius: inherit;
    background: linear-gradient(135deg, #994dff05 0%, #f4339e05 100%);
    transition: opacity .4s;
    position: absolute;
    inset: 0;
  }

  .glass-gradient:hover:before {
    opacity: 1;
  }

  .glass-gradient:hover {
    border-color: #8b5cf61f;
    transform: translateY(-2px);
    box-shadow: 0 12px 40px #994dff14;
  }

  .glass-premium {
    -webkit-backdrop-filter: blur(25px);
    background: linear-gradient(135deg, #fffffff2 0%, #ffffffe0 100%);
    border: 1px solid #ffffff26;
    transition: all .4s;
    position: relative;
    box-shadow: 0 8px 32px #994dff0f, inset 0 1px #fffc;
  }

  .glass-premium:hover {
    background: linear-gradient(135deg, #fffffffa 0%, #ffffffeb 100%);
    border-color: #8b5cf626;
    transform: translateY(-3px);
    box-shadow: 0 16px 48px #994dff1f, inset 0 1px #ffffffe6;
  }

  .custom-carousel {
    position: relative;
    overflow: hidden;
  }

  .custom-carousel-track {
    will-change: transform;
    backface-visibility: hidden;
    perspective: 1000px;
    transition: transform .8s cubic-bezier(.25, .46, .45, .94);
    display: flex;
    transform: translateZ(0);
  }

  .custom-carousel-slide {
    opacity: 1;
    flex-shrink: 0;
    transition: opacity .3s;
  }

  .custom-carousel-track, .custom-carousel-slide {
    backface-visibility: hidden;
    perspective: 1000px;
    transform: translateZ(0);
  }

  @media (width <= 768px) {
    .custom-carousel-track {
      transition: transform .5s cubic-bezier(.4, 0, .2, 1);
    }
  }

  .line-clamp-1 {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .line-clamp-2 {
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .line-clamp-3 {
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .line-clamp-4 {
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .line-clamp-5 {
    -webkit-line-clamp: 5;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .badge-desktop-expanded {
    white-space: nowrap !important;
    border-radius: 8px !important;
    justify-content: center !important;
    align-items: center !important;
    height: auto !important;
    min-height: 18px !important;
    padding: 3px 8px !important;
    font-size: 11px !important;
    font-weight: 500 !important;
    line-height: 1.2 !important;
    display: inline-flex !important;
  }

  @media (width <= 768px) {
    .badge-mobile-expanded {
      white-space: nowrap !important;
      border-radius: 6px !important;
      justify-content: center !important;
      align-items: center !important;
      height: auto !important;
      min-height: 14px !important;
      padding: 2px 6px !important;
      font-size: 9px !important;
      font-weight: 500 !important;
      line-height: 1.2 !important;
      display: inline-flex !important;
    }
  }

  @media (width <= 480px) {
    .badge-mobile-compact {
      border-radius: 3px !important;
      height: 12px !important;
      min-height: 12px !important;
      padding: 1px 3px !important;
      font-size: 9px !important;
    }
  }

  .linkedin-hover:hover, .dark .linkedin-hover:hover {
    color: #fff !important;
    background-color: #0077b5 !important;
    border-color: #0077b5 !important;
  }

  .linkedin-hover:hover svg, .linkedin-hover:hover .lucide, .dark .linkedin-hover:hover svg, .dark .linkedin-hover:hover .lucide {
    color: #fff !important;
  }

  .no-decorative-line:after {
    display: none !important;
  }

  .card-elegant {
    -webkit-backdrop-filter: blur(15px);
    background: #ffffffb3;
    border: 1px solid #ffffff0f;
    border-radius: 1rem;
    transition: all .3s;
    position: relative;
    box-shadow: 0 4px 24px #994dff0a;
  }

  .card-elegant:hover {
    background: #fffc;
    border-color: #8b5cf614;
    transform: translateY(-1px);
    box-shadow: 0 8px 32px #994dff14;
  }

  .card-premium {
    -webkit-backdrop-filter: blur(25px);
    background: linear-gradient(135deg, #fffffff2 0%, #ffffffe0 100%);
    border: 1px solid #ffffff26;
    border-radius: 1rem;
    transition: all .4s;
    position: relative;
    box-shadow: 0 8px 32px #994dff0f, inset 0 1px #fffc;
  }

  .card-premium:hover {
    background: linear-gradient(135deg, #fffffffa 0%, #ffffffeb 100%);
    border-color: #8b5cf626;
    transform: translateY(-3px);
    box-shadow: 0 16px 48px #994dff1f, inset 0 1px #ffffffe6;
  }

  .card-hover-lift {
    transition: all .3s;
  }

  .card-hover-lift:hover {
    transform: translateY(-4px)scale(1.01);
  }

  .border-elegant {
    border: 1px solid #8b5cf614;
  }

  .dark .border-elegant {
    border-color: #8b5cf61f;
  }

  .border-elegant-hover {
    border: 1px solid #ffffff0f;
    transition: border-color .3s;
  }

  .border-elegant-hover:hover {
    border-color: #8b5cf626;
  }

  .dark .border-elegant-hover {
    border-color: #8b5cf60f;
  }

  .dark .border-elegant-hover:hover {
    border-color: #8b5cf62e;
  }

  .accent-gradient {
    position: relative;
  }

  .accent-gradient:after {
    content: "";
    opacity: 0;
    border-radius: inherit;
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%);
    height: 2px;
    transition: opacity .3s;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
  }

  .accent-gradient:hover:after {
    opacity: .6;
  }

  .dark .accent-gradient:after {
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%);
  }

  .dark .card-elegant {
    background: #0f0b1f66;
    border-color: #8b5cf60f;
    box-shadow: 0 4px 24px #0003;
  }

  .dark .card-elegant:hover {
    background: #0f0b1f8c;
    border-color: #8b5cf61a;
    box-shadow: 0 8px 32px #0000004d;
  }

  .dark .card-premium {
    background: linear-gradient(135deg, #0f0b1feb 0%, #0f0b1fd9 100%);
    border-color: #8b5cf626;
    box-shadow: 0 8px 32px #00000073, inset 0 1px #8b5cf61a;
  }

  .dark .card-premium:hover {
    background: linear-gradient(135deg, #0f0b1ff5 0%, #0f0b1fe6 100%);
    border-color: #8b5cf633;
    box-shadow: 0 16px 48px #0000008c, inset 0 1px #8b5cf626;
  }

  .connecting-line {
    background: linear-gradient(90deg, #994dff33 0%, #f4339e33 100%);
  }

  .dark .connecting-line {
    background: linear-gradient(90deg, #994dff33 0%, #10cda533 100%);
  }

  .header-with-border:after {
    content: "";
    opacity: .8;
    background: linear-gradient(135deg, #994dff 0%, #f4339e 100%);
    height: 1px;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
  }

  .dark .header-with-border:after {
    background: linear-gradient(135deg, #994dff 0%, #10cda5 100%);
  }
}

.dark .glass {
  background: #0f0b1f99;
  border-color: #8b5cf614;
  box-shadow: 0 8px 32px #00000040;
}

.dark .glass:hover {
  background: #0f0b1fbf;
  border-color: #8b5cf626;
  box-shadow: 0 12px 40px #00000059;
}

.dark .glass-strong {
  background: #0f0b1fcc;
  border-color: #8b5cf61f;
  box-shadow: 0 8px 32px #0006, inset 0 1px #8b5cf614;
}

.dark .glass-strong:hover {
  background: #0f0b1fe6;
  border-color: #8b5cf62e;
  box-shadow: 0 16px 48px #00000080, inset 0 1px #8b5cf61f;
}

.dark .glass-subtle {
  background: #0f0b1f66;
  border-color: #8b5cf60f;
  box-shadow: 0 4px 24px #0003;
}

.dark .glass-subtle:hover {
  background: #0f0b1f8c;
  border-color: #8b5cf61a;
  box-shadow: 0 8px 32px #0000004d;
}

.dark .glass-gradient {
  background: #0f0b1f99;
  border-color: #8b5cf614;
}

.dark .glass-gradient:before {
  background: linear-gradient(135deg, #994dff0a 0%, #10cda50a 100%);
}

.dark .glass-gradient:hover {
  border-color: #8b5cf626;
  box-shadow: 0 12px 40px #0000004d;
}

.dark .glass-premium {
  background: linear-gradient(135deg, #0f0b1feb 0%, #0f0b1fd9 100%);
  border-color: #8b5cf626;
  box-shadow: 0 8px 32px #00000073, inset 0 1px #8b5cf61a;
}

.dark .glass-premium:hover {
  background: linear-gradient(135deg, #0f0b1ff5 0%, #0f0b1fe6 100%);
  border-color: #8b5cf633;
  box-shadow: 0 16px 48px #0000008c, inset 0 1px #8b5cf626;
}

.dark body h1, .dark body h2, .dark body h3, .dark body .section-title, .dark body .card-title, .dark body .stat-number, .dark body .gradient-text {
  color: #0000 !important;
  background: linear-gradient(135deg, #994dff 0%, #10cda5 100%) text !important;
}

.dark body h2:after, .dark body .section-title:after {
  background: linear-gradient(135deg, #994dff 0%, #10cda5 100%) !important;
}

html {
  font-size: var(--font-size);
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@property --tw-ease {
  syntax: "*";
  inherits: false
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}
